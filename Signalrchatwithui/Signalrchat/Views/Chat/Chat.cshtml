
@{
    ViewData["Title"] = "Chat Room";
    var roomName = ViewBag.RoomName as string;
    var loggedInUserName = ViewBag.LoggedInUserName as string;
   // var connectedUsers = Model.GetConnectedUsers();
   // var messages = Model.GetMessages();
}
<style>
    .container {
        max-width: 1170px;
        margin: auto;
        background-color: #F4F2F6;
        /* background-image: linear-gradient(180deg, #F2F6FA 25%, #C1DCF6 100%); */
    }

    .chat_header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 70px;
    }

    .no_chat {
        height: calc(100vh - 70px);
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .join {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .online {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        background: #F2F4F5;
    }

    img {
        max-width: 100%;
    }

    .inbox_people {
        background-color: #F2F4F5;
        /* background-image: linear-gradient(180deg, #F2F4F5 25%, #E3F3FB 100%); */
        float: left;
        overflow: hidden;
        width: 40%;
        border-right: 1px solid #c4c4c4;
    }

    .inbox_msg {
        border: 1px solid #c4c4c4;
        clear: both;
        overflow: hidden;
    }

    .top_spac {
        margin: 20px 0 0;
    }


    .recent_heading {
        float: left;
        width: 40%;
    }

    .srch_bar {
        display: inline-block;
        text-align: right;
        width: 60%;
    }

    .headind_srch {
        padding: 10px 29px 10px 20px;
        overflow: hidden;
        border-bottom: 1px solid #c4c4c4;
    }

    .recent_heading h4 {
        color: #05728f;
        font-size: 20px;
        margin: auto;
    }

    .srch_bar input {
        border: 1px solid #cdcdcd;
        border-width: 0 0 1px 0;
        width: 80%;
        padding: 2px 0 4px 6px;
        background: none;
        outline: none;
    }

    .srch_bar .input-group-addon button {
        background: rgba(0, 0, 0, 0) none repeat scroll 0 0;
        border: medium none;
        padding: 0;
        color: #707070;
        font-size: 18px;
    }

    .srch_bar .input-group-addon {
        margin: 0 0 0 -27px;
    }

    .chat_ib h5 {
        font-size: 15px;
        color: #464646;
        margin: 0 0 8px 0;
    }

        .chat_ib h5 span {
            font-size: 13px;
            float: right;
        }

    .chat_ib p {
        font-size: 14px;
        color: #989898;
        margin: auto
    }

    .chat_img {
        float: left;
        width: 11%;
    }

    .chat_ib {
        float: left;
        padding: 0 0 0 15px;
        width: 88%;
    }

    .chat_people {
        overflow: hidden;
        clear: both;
    }

    .chat_list {
        border-bottom: 1px solid #c4c4c4;
        margin: 0;
        padding: 18px 16px 10px;
    }

    .inbox_chat {
        height: 550px;
        overflow-y: scroll;
    }

    .active_chat {
        background: #ebebeb;
    }

    .incoming_msg_img {
        display: inline-block;
        width: 6%;
    }

    .received_msg {
        display: inline-block;
        padding: 0 0 0 10px;
        vertical-align: top;
        width: 92%;
    }

    .received_withd_msg p {
        background: #ebebeb none repeat scroll 0 0;
        border-radius: 3px;
        color: #646464;
        font-size: 14px;
        margin: 0;
        padding: 5px 10px 5px 12px;
        width: 100%;
    }

    .time_date {
        color: #747474;
        display: block;
        font-size: 12px;
        margin: 8px 0 0;
        margin-bottom: 6px;
    }

    .received_withd_msg {
        width: 57%;
    }

    .mesgs {
        float: left;
        padding: 30px 15px 0 25px;
        width: 60%;
    }

    .sent_msg p {
        background: #05728f none repeat scroll 0 0;
        border-radius: 3px;
        font-size: 14px;
        margin: 0;
        color: #fff;
        padding: 5px 10px 5px 12px;
        width: 100%;
    }

    .outgoing_msg {
        overflow: hidden;
        margin: 8px 0 8px;
    }

    .sent_msg {
        float: right;
        width: 46%;
    }

    .input_msg_write input {
        background: rgba(0, 0, 0, 0) none repeat scroll 0 0;
        border: medium none;
        color: #4c4c4c;
        font-size: 15px;
        min-height: 48px;
        width: 100%;
    }

    .type_msg {
        border-top: 1px solid #c4c4c4;
        position: relative;
    }

    .msg_send_btn {
        background: #05728f none repeat scroll 0 0;
        border: medium none;
        border-radius: 50%;
        color: #fff;
        cursor: pointer;
        font-size: 17px;
        height: 33px;
        position: absolute;
        right: 0;
        top: 11px;
        width: 33px;
    }

    .messaging {
        padding: 0 0 50px 0;
    }

    .msg_history {
        height: 516px;
        overflow-y: auto;
    }

</style>
<div class="container mt-5">

    <div class="chat_header">
        <h3 class="text-center my-2">Welcome to <span class="text-warning">@roomName</span> Group</h3>
        <form asp-action="LeaveChat" method="post" class="d-inline">
            <button type="submit" class="btn btn-danger">Leave Chat</button>
        </form>
    </div>
    <div class="messaging">
        <div class="inbox_msg">
            <div class="inbox_people">
                <div class="headind_srch">
                    <div class="recent_heading">
                        <h4>Connected Users</h4>
                    </div>
                    <div class="srch_bar">
                        <div class="stylish-input-group">
                            <input type="text" class="search-bar" placeholder="Search">
                            <span class="input-group-addon">
                                <button type="button"> <i class="fa fa-search" aria-hidden="true"></i> </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="inbox_chat">
                    @* @foreach (var user in connectedUsers)
                    {
                        <div class="chat_list">
                            <div class="chat_people">
                                <div class="chat_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>
                                <div class="chat_ib mt-3">
                                    <h5>@user <span class="online"></span></h5>
                                </div>
                            </div>
                        </div>
                    }
                 *@</div>
            </div>
            <div class="mesgs">
                <div class="msg_history" id="scrollMe">
                   @*   @foreach (var message in messages)
                    {
                        <div class="@(message.User != loggedInUserName ? "incoming_msg" : "outgoing_msg")">
                            @if (message.User != loggedInUserName)
                            { *@
                                <div class="incoming_msg_img">
                                    <img src="https://ptetutorials.com/images/user-profile.png" alt="user">
                                </div>
                                <div class="received_msg">
                                    <div class="received_withd_msg" id="received_withd_msg">
                                     </div>
                                </div>
                           @*  }
                            else
                            {
                                <div class="sent_msg">
                                    <p>@message.MessageText</p>
                                    <span class="time_date">@message.User | @message.MessageTime.ToString("MM/dd/yyyy hh:mm tt")</span>
                                </div>
                            }
                        </div> 
                    }*@
                 </div>
                <div class="type_msg">
                    <div class="input_msg_write">
                        <input type="hidden" name="roomName" id="roomName" value="@roomName" />
                            <input name="message" id="message" type="text" class="write_msg" placeholder="Type a message" />
                            <button class="msg_send_btn" type="submit" id="sendmessage"></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>
    debugger
    // var authToken = "shiv@gmail.com_";
    // var connection = new signalR.HubConnectionBuilder()
    //     .withUrl(`/ChatHub?authToken=${encodeURIComponent(authToken)}`)
    //     .build();

    connection.start().then(function () {
        // Enable the JoinRoom button once the connection is established
       // document.getElementById("JoinRoom").disabled = false;
    }).catch(function (err) {
        console.error("Error starting connection:", err.toString());
    });
    connection.on("ReceiveMessage", function (user, message, sendAt) {
        var div = document.getElementById("received_withd_msg");

        var p = document.createElement("p");
        p.innerHTML = messageText;

        var span = document.createElement("span");
        span.className = "time_date";
        span.innerHTML = user + " | " + messageTime.toLocaleString("en-US", { timeZone: "UTC" });

        div.appendChild(p);
        div.appendChild(span);
    });

    document.getElementById("sendmessage").addEventListener("click", function (event) {
        debugger
        //var user = document.getElementById("roomName").value;
        var message = document.getElementById("message").value;
        if (message.trim() !== '' ) {
            connection.invoke("SendMessage",  message).catch(function (err) {
                console.error(err.toString());
            });
        }
        event.preventDefault();
    });


</script>
